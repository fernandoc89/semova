{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Fernando/Documents/ESTUDOS-TI/Rocketseat/NLW/aulas/semova-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Fernando\\\\Documents\\\\ESTUDOS-TI\\\\Rocketseat\\\\NLW\\\\aulas\\\\semova-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1]; // useState coloca o estado no componente - começaem 25 minutos - 60 é a quantidde de segundos em cada minuto\n\n\n  var _useState2 = useState(25 * 60),\n      active = _useState2[0],\n      setActive = _useState2[1]; // esse estado vai armazenar se o countdown está iniciado ou parado\n\n\n  var minutes = Math.floor(time / 60); // calcula os minutos - math é usado para arredondar - floor arredonda pra baixo\n\n  var seconds = time % 60; // calcula os segundos\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1]; // transformando minutos em String - padStart verifica se há dois caracteres, ele preenche a esquerda com 0 - split é responsável por dividir a string\n\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1]; // transformando segundos em String\n\n\n  function startCountdown() {\n    setActive(tru);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar Ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Countdown, \"RSprDEPQ5z7VuuAgLYhVf3OvjDw=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/Fernando/Documents/ESTUDOS-TI/Rocketseat/NLW/aulas/semova-next/src/components/Countdown.tsx"],"names":["useState","styles","Countdown","time","setTime","active","setActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","tru","countdownContainer","countdownButton"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAsB;AAAA;;AAAA,kBACHF,QAAQ,CAAC,KAAK,EAAN,CADL;AAAA,MACpBG,IADoB;AAAA,MACdC,OADc,iBACoB;;;AADpB,mBAECJ,QAAQ,CAAC,KAAK,EAAN,CAFT;AAAA,MAEpBK,MAFoB;AAAA,MAEZC,SAFY,kBAEoB;;;AAC/C,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB,CAH2B,CAGoB;;AAC/C,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB,CAJ2B,CAIoB;;AAJpB,8BAMOQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CANP;AAAA;AAAA,MAMpBC,UANoB;AAAA,MAMRC,WANQ,8BAMsD;;;AANtD,+BAOOJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAPP;AAAA;AAAA,MAOpBG,UAPoB;AAAA,MAORC,WAPQ,8BAOsD;;;AAEjF,WAASC,cAAT,GAA0B;AACxBZ,IAAAA,SAAS,CAACa,GAAD,CAAT;AACD;;AACD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACmB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEhB,MAAM,CAACoB,eAFpB;AAGE,MAAA,OAAO,EAAEH,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlCehB,S;;KAAAA,S","sourcesContent":["import { useState } from 'react';\r\nimport { start } from 'repl';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nexport function Countdown () {\r\n  const [time, setTime] = useState(25 * 60);     // useState coloca o estado no componente - começaem 25 minutos - 60 é a quantidde de segundos em cada minuto\r\n  const [active, setActive] = useState(25 * 60); // esse estado vai armazenar se o countdown está iniciado ou parado\r\n  const minutes = Math.floor(time / 60);         // calcula os minutos - math é usado para arredondar - floor arredonda pra baixo\r\n  const seconds = time % 60;                     // calcula os segundos\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');    // transformando minutos em String - padStart verifica se há dois caracteres, ele preenche a esquerda com 0 - split é responsável por dividir a string\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');    // transformando segundos em String\r\n\r\n  function startCountdown() {\r\n    setActive(tru)\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={styles.countdownContainer}>\r\n        <div>\r\n          <span>{minuteLeft}</span>\r\n          <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n          <span>{secondLeft}</span>\r\n          <span>{secondRight}</span>\r\n        </div>\r\n      </div>\r\n      <button \r\n        type=\"button\" \r\n        className={styles.countdownButton}\r\n        onClick={startCountdown}\r\n      >\r\n        Iniciar Ciclo\r\n      </button>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}