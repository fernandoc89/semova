{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fernando\\\\Documents\\\\ESTUDOS-TI\\\\Rocketseat\\\\NLW\\\\aulas\\\\semova-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60); // useState coloca o estado no componente - começaem 25 minutos - 60 é a quantidde de segundos em cada minuto\n\n  const {\n    0: active,\n    1: setActive\n  } = useState(false); // esse estado vai armazenar se o countdown está iniciado ou parado\n\n  const minutes = Math.floor(time / 60); // calcula os minutos - math é usado para arredondar - floor arredonda pra baixo\n\n  const seconds = time % 60; // calcula os segundos\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split(''); // transformando minutos em String - padStart verifica se há dois caracteres, ele preenche a esquerda com 0 - split é responsável por dividir a string\n\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split(''); // transformando segundos em String\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  useEffect(() => {\n    if (active && time > 0) {\n      setTimeout(() => {});\n    }\n  }, [active]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar Ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Fernando/Documents/ESTUDOS-TI/Rocketseat/NLW/aulas/semova-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","active","setActive","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","setTimeout","countdownContainer","countdownButton"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAsB;AAC3B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,KAAK,EAAN,CAAhC,CAD2B,CACoB;;AAC/C,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,KAAD,CAApC,CAF2B,CAEkB;;AAE7C,QAAMQ,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB,CAJ2B,CAIoB;;AAC/C,QAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB,CAL2B,CAKoB;;AAE/C,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC,CAP2B,CAOsD;;AACjF,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC,CAR2B,CAQsD;;AAEjF,WAASG,cAAT,GAA0B;AACxBZ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,MAAM,IAAIF,IAAI,GAAG,CAArB,EAAwB;AACtBgB,MAAAA,UAAU,CAAC,MAAM,CAAE,CAAT,CAAV;AACD;AACF,GAJQ,EAIN,CAACd,MAAD,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACmB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOT;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEhB,MAAM,CAACoB,eAFpB;AAGE,MAAA,OAAO,EAAEH,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { start } from 'repl';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nexport function Countdown () {\r\n  const [time, setTime] = useState(25 * 60);     // useState coloca o estado no componente - começaem 25 minutos - 60 é a quantidde de segundos em cada minuto\r\n  const [active, setActive] = useState(false); // esse estado vai armazenar se o countdown está iniciado ou parado\r\n  \r\n  const minutes = Math.floor(time / 60);         // calcula os minutos - math é usado para arredondar - floor arredonda pra baixo\r\n  const seconds = time % 60;                     // calcula os segundos\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');    // transformando minutos em String - padStart verifica se há dois caracteres, ele preenche a esquerda com 0 - split é responsável por dividir a string\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');    // transformando segundos em String\r\n\r\n  function startCountdown() {\r\n    setActive(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (active && time > 0) {\r\n      setTimeout(() => {})\r\n    }\r\n  }, [active])\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.countdownContainer}>\r\n        <div>\r\n          <span>{minuteLeft}</span>\r\n          <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n          <span>{secondLeft}</span>\r\n          <span>{secondRight}</span>\r\n        </div>\r\n      </div>\r\n      <button \r\n        type=\"button\" \r\n        className={styles.countdownButton}\r\n        onClick={startCountdown}\r\n      >\r\n        Iniciar Ciclo\r\n      </button>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}